{"version":3,"sources":["App.js","index.js"],"names":["App","useState","loading","setLoading","tabs","setTabs","value","setValue","fetchTabs","a","fetch","response","json","newTabs","console","log","useEffect","className","title","dates","duties","company","map","tab","i","key","onClick","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNA0EeA,MAtEf,WAAe,MAEeC,oBAAS,GAFxB,mBAEPC,EAFO,KAECC,EAFD,OAGUF,mBAAS,IAHnB,mBAGPG,EAHO,KAGDC,EAHC,OAIWJ,mBAAS,GAJpB,mBAIPK,EAJO,KAIDC,EAJC,KAOPC,EAAS,uCAAG,8BAAAC,EAAA,6DAChBN,GAAW,GACXI,EAASD,GAFO,kBAISI,MAbjB,6CASQ,cAIRC,EAJQ,gBAKQA,EAASC,OALjB,OAKRC,EALQ,OAMdC,QAAQC,IAAIF,GACZR,EAAQQ,GACRV,GAAW,GARG,kDAWdA,GAAW,GACXW,QAAQC,IAAR,MAZc,0DAAH,qDAsBb,GALFC,qBAAU,WACRR,MACA,IAGIN,EACF,OACE,6BAASe,UAAU,mBACjB,2CAhCK,MAqC0Bb,EAAKE,GAAnCY,EArCI,EAqCJA,MAAMC,EArCF,EAqCEA,MAAMC,EArCR,EAqCQA,OAAOC,EArCf,EAqCeA,QAG5B,OAFEP,QAAQC,IAAIX,EAAKE,IAGjB,6BAASW,UAAU,WACjB,yBAAKA,UAAU,SACb,0CACA,yBAAKA,UAAU,eAEjB,yBAAKA,UAAU,cACb,yBAAKA,UAAU,iBACZb,EAAKkB,KAAI,SAACC,EAAIC,GACb,OACE,4BAAQC,IAAKD,EAAGP,UAAU,wCAAwCS,QAAS,WAAOnB,EAASiB,KAAMD,EAAIF,aAI3G,6BAASJ,UAAU,YACjB,4BAAKC,GACL,4BAAKG,GACL,uBAAGJ,UAAU,YAAYE,GACxBC,EAAOE,KAAI,SAACK,EAAKH,GAChB,OACE,yBAAKC,IAAKD,EAAGP,UAAU,YAAW,kBAAC,IAAD,CAAoBA,UAAU,aAAgC,2BAAIU,SAK5G,4BAAQV,UAAU,OAAlB,eChENW,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.530c9c81.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { FaAngleDoubleRight } from 'react-icons/fa'\r\nconst url = 'https://course-api.com/react-tabs-project'\r\n\r\nfunction App() {\r\n  //states\r\n  const[loading,setLoading] = useState(true) \r\n  const[tabs, setTabs] = useState([])\r\n  const[value,setValue] = useState(0)\r\n\r\n  //fetch function\r\n  const fetchTabs = async() => {\r\n    setLoading(true)\r\n    setValue(value)\r\n    try{\r\n      const response = await fetch(url)\r\n      const newTabs = await response.json() \r\n      console.log(newTabs)\r\n      setTabs(newTabs)\r\n      setLoading(false)\r\n    }\r\n    catch(error){\r\n      setLoading(false)\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  //useEffect FUNCTION since we use fetch for API and we have more than one state\r\n  useEffect(()=>{  \r\n    fetchTabs();\r\n  },[])  //repeat just one time\r\n\r\n  //we have to write the below line otherwise tabs is going to be empty\r\n    if (loading) {\r\n      return (\r\n        <section className=\"section loading\">\r\n          <h1>Loading...</h1>\r\n        </section>\r\n      )\r\n    }\r\n    //we should destructure array of objects and send it to tabs state\r\n    const {title,dates,duties,company} = tabs[value]\r\n    console.log(tabs[value])  //show one of the three ones when we click on each of them\r\n  \r\n  return(\r\n    <section className='section'>\r\n      <div className='title'>\r\n        <h2>experience</h2>\r\n        <div className='underline'></div>\r\n      </div>\r\n      <div className='job-center'>\r\n        <div className=\"btn-container\">\r\n          {tabs.map((tab,i)=>{\r\n            return(\r\n              <button key={i} className='job-btn {isActive ? \"active-btn\": \"\"}' onClick={() => {setValue(i)}}>{tab.company}</button>\r\n            )\r\n          })}\r\n        </div>\r\n        <article className='job-info'>\r\n          <h3>{title}</h3>\r\n          <h4>{company}</h4>\r\n          <p className='job-date'>{dates}</p>\r\n          {duties.map((item,i)=>{\r\n            return(\r\n              <div key={i} className='job-desc'><FaAngleDoubleRight className='job-icon'></FaAngleDoubleRight><p>{item}</p></div>\r\n            )\r\n          })}\r\n        </article>\r\n      </div>\r\n      <button className='btn'>more info</button>\r\n    </section> \r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}